"use strict";var _extends=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e};document.addEventListener("DOMContentLoaded",function(){var testTimeout=5e3,common=parent.__common,frameId=window.__frameId,frameReady=common[frameId+"Ready"]||{onNext:function(){}},Rx=document.Rx,helpers=Rx.helpers,chai=parent.chai,source=document.__source,__getUserInput=document.__getUserInput||function(e){return e},checkChallengePayload=document.__checkChallengePayload;document.__getJsOutput=function getJsOutput(){if(window.__err||!common.shouldRun())return window.__err||"source disabled";var output=void 0;try{output=eval(source)}catch(e){output=e.message+"\n"+e.stack,window.__err=e}return output},document.__runTests=function runTests(){var tests=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],editor={getValue:function(){return source}},code=source;return window.__err?Rx.Observable.from(tests).map(function(e){return _extends({},e,{err:window.__err.message+"\n"+window.__err.stack,message:window.__err.message,stack:window.__err.stack})}).toArray().do(function(){window.__err=null}):Rx.Observable.from(tests,null,null,Rx.Scheduler.default).delay(200).flatMap(function(_ref){var text=_ref.text,testString=_ref.testString,assert=chai.assert,getUserInput=__getUserInput,newTest={text:text,testString:testString},test=void 0,__result=void 0;try{test=eval(testString),"function"==typeof test?(__result=1===test.length?test(getUserInput):Rx.Observable.fromNodeCallback(test)(getUserInput),helpers.isPromise(__result)&&(__result=Rx.Observable.fromPromise(__result))):__result=Rx.Observable.of(null)}catch(e){__result=Rx.Observable.throw(e)}return __result.timeout(5e3).map(function(){return newTest.pass=!0,newTest}).catch(function(e){var t=e.message||"",r=t.indexOf(": expected");return-1!==r&&(t=t.slice(0,r)),t=t.replace(/<code>(.*?)<\/code>/g,"$1"),newTest.err=e.message+"\n"+e.stack,newTest.stack=e.stack,newTest.message=t,Rx.Observable.of(newTest)})}).toArray()},frameReady.onNext({checkChallengePayload:checkChallengePayload})});